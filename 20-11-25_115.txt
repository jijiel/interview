1.키워드란 무엇인가?
 - 자바 프로그래밍 문법을 위한 것을 키워드라고 한다. 키워드는 변수의 이름으로 사용할 수 없다.
ex)public, static, void

2.2의 보수법이란?
 - 어떤 수를 더했을 때 2가 되는 수로 10진수의 음의 정수를 2진수로 변환하기 위해 사용된다.

3.컴퓨터에서 음의 정수 표현방법에 대하여 설명하시오.
- 10진수의 수에 1의보수법을 구한 후 +1을 하면 2의 보수가 된다. 이것을 표현하면 음의 정수 표션 

4.-5가 컴퓨터에서의 2진수 값을 나타내시오.
 - 1011 (5)0101-> (1의보수)1010-> +1-> 1011

5.실수에서 오차가 생기는 원인은 무엇인가?
 - 실수는 소수점 아래 숫자가 무한대로 있기때문에 어쩔 수 없이 값을 정해서 메모리에 이진수로 표현하여 차이가 생김 

6.실수의 표현법은(고정소수법, 부동소수법)을 설명하시오.
 - 고정소수법 방식은 소수점 이상, 소수점 이하를 특정 비트로 딱 나눠서 처리 
 - 부동소수법 방식은 정수와 소수 부분으로 나누지 않고,IEEE에서 정한대로 지수와 가수 부분으로 나눠서 표현

7.정밀도란 무엇인가요?
 - 소수점 이하 부분을 더 많이 출력 할 수 있는 것

8.상수란 무엇이며 변수와의 차이는?
 - 자바에서 일반적인 상수란 변수에 값을 딱 한번만 할당 할 수 있으면 그건 상수, 한 번 할당된 값은 변경이 불가능하다.
   변수는 변하는 수로 변수 앞에 키워드 final 선언을 붙이면 상수 

9.초기화란 무엇인가?
 - 해당 변수에 처음으로 값을 넣는 것을 변수 초기화라고 한다.상수는 한 번 초기화 되면 값을 변경하지 못한다.

10.리터럴이란 무엇인가요?
 - 자료형을 기반으로 표현이 되는 상수를 의미한다. 정수형 리터럴, 실수형 리터럴
   ex) int num1 = 5+7;
   > 메모리 할당> cpu가 연산 후 > 13>>>>>>>>>>>>>>>>>> 각각의 5,7을 리터럴이라고 함
   ex) double num2 = 3.3+4.5; >>>>>>>>>>>>>>> 3.3와 4.5도 리터럴임
    
11.아래의 내용이 에러가 나는 이유와 수정방법은?
System.out.println(3147483647 + 3147483648);
 - 정수는 무조건 int형으로 인식하는데, 출력 가능한 값인 21억의 범위가 넘어가기 때문에
   수정을 하려면 System.out.println(3147483647L+3147483648L) l또는 L을 붙여서 long 형 상수로 표현해달라는 요청을 해야함

12.자동 형변환과 명시적 형변환에 대하여 설명하시오.
 - 자동 형변환: CPU는 연산 시킬때는 반드시 데이터 타입이 같아야하는데, 규칙에 따라 에러가 나지 않고 자동으로 한쪽으로 맞춰 출력되는 경우
 - 명시적 형변환은 강제적 형변환으로 자동 형 변 환 규칙에 부합하지는 않지만 형 변환이 필요한 상황이면 명시적 형 변환을 진행한다.

13.아래의 에러가 나는 이유를 설명하고 수정하시오.
    	int a = 3;
    	int b = 4;
    	
    	double result = a / b;
    	
    	System.out.println(result);

 - a와 b가 int로 정수를 표현하기 때문에  double result = a / b;를 int/int 로 0/0으로 계산. a나b를 double로 만들어줌. 강제 형변환을 시켜 출력해야 한다.
      	int a = 3;
    	int b = 4;
    	
    	double result = (double)a / b;
    	
    	System.out.println(result);

14.이스퀘이프 시퀀스의 종료를 나열하고 기능을 설명하시오.
 - 
'\b' 백스페이스 문자
'\t' 탭
'\\' 백슬래시 문자
'\'' 작은따옴표
'\"' 큰따옴표
'\n' 개 행문자 (다음행으로 넘김)
'\r' 처음 문자로 리턴 후 개행 

15.아래의 출력결과를 확인하고, 130이 나오는 이유를 설명하시오.
System.out.println('A' + 'A')
 - 출력값 130 
 - 'A'의 경우 문자로 사용 되었기 때문에 아스키코드 해당 값인 65이다. 해당 값을 65+65 하면 130
- +를 하려면 연산을 해야하기 때문에 CPU로 전송 해야함, 이전에 메모리에 올리기 위해서는 'A'에 대한 데이터 타입은 char 이기 때문에 인코딩 과정을 거침, 그럼 65인 정수형 타입으로 인식하는데 이때 int형 (4바이트)로 자동 형변환 된다. 그래서 65+65=130 의 결과가 나옴

